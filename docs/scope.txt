Stock Price Prediction Scope
Last Updated: August 6, 2025, 08:05 AM IST

Project Goal:
- Develop a dynamic system to predict the next-day closing price of any stock using a linear regression model, with Tesla (TSLA) as the initially selected stock. The system supports flexible stock selection via command-line arguments.

Data Source:
- Alpha Vantage API (free tier, daily stock data for the selected stock).
- Time frame: 1 year of daily data (June 17, 2024 - June 16, 2025) for the initially selected stock, TSLA.

Features:
- Previous day's closing price.
- Daily trading volume.
- 5-day moving average of closing price.

Model:
- Linear regression to predict the next day's closing price based on selected features. Two versions are trained: one including outliers and one excluding them to assess their impact.

Deliverables:
- Python scripts for data retrieval (fetch_data.py), processing (process_data.py), model training (model.py), and notebook exporting (export_notebook.py), supporting dynamic stock selection.
- Trained linear regression models saved in /models folder, named dynamically (e.g., /models/<stock>_model_with_outliers_<timestamp>.pkl).
- Jupyter notebooks for data inspection (inspect_data.ipynb) and model analysis (model_analysis.ipynb).
- Evaluation reports and visualizations saved in /docs/data_evaluation and /docs/model_evaluation.
- GitHub repository (stock-price-prediction) with organized code, data, and documentation in folders: /config, /data, /docs, /logs, /models, /notebooks, /plots, /scripts, /spp.

DevOps Requirements:
- Automated script to pull daily data from Alpha Vantage API for the selected stock (Phase 6).
- Automated data cleaning and processing pipeline (Phase 6).
- Automated model training and evaluation (Phase 6).
- GitHub repository for version control.
- Scheduled updates to fetch new data and retrain the model (Phase 9).

Success Criteria:
- Model achieves reasonable accuracy (e.g., low mean squared error on test data) for the selected stock.
- Pipeline runs without errors, with data and model outputs saved correctly for the selected stock.
- GitHub repo is well-documented with a README and clear code structure.

Note: The system is designed for dynamic stock selection, with TSLA as the initial stock. Users can switch to other stocks by providing the stock symbol via command-line arguments.